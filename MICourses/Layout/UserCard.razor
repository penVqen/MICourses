<div class="course-card" style="background-color: white; border-radius: 10px; padding: 20px; border: 1px solid #ddd; display: flex; flex-direction: column; justify-content: space-between;">
    <div style="display: flex; flex-direction: column; gap: 8px;">
        <!-- Логин -->
        <div style="font-size: 16px; font-weight: bold; display: flex; align-items: center; gap: 8px;">
            <i class="fas fa-user" style="color: #777;"></i>
            <span>@User.Login</span>
        </div>

        <!-- Почта -->
        <div style="font-size: 14px; color: #555; display: flex; align-items: center; gap: 8px;">
            <i class="fas fa-envelope" style="color: #777;"></i>
            <span>@User.Email</span>
        </div>

        <!-- Роль, Фамилия и Имя на одной строке -->
        <div style="font-size: 14px; color: #777; display: flex; align-items: center; gap: 8px;">
            <i class="fas fa-shield" style="color: #777;"></i>
            <span style="font-weight: bold;">@User.Role</span>
            <span>@($"{User.Surname} {User.Name}")</span>
        </div>
    </div>

    <!-- Кнопка изменения роли -->
    <button @onclick="ShowRoleChangeConfirmation"
            class="mt-4 text-white px-4 py-2 rounded-md hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300"
            style="background-color: #6366F1;">
        Изменить роль
    </button>
</div>

<!-- Модальное окно подтверждения изменения роли -->
@if (IsRoleChangeDialogOpen)
{
    <div class="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50">
        <div class="bg-white rounded-lg shadow-lg p-6 w-1/3">
            <h3 class="text-lg font-semibold">Вы уверены?</h3>
            <p class="mt-4 text-sm text-gray-600">Вы уверены, что хотите изменить роль пользователю?</p>
            <div class="flex justify-end gap-4 mt-6">
                <button @onclick="ConfirmRoleChange"
                        class="bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500">
                    Да
                </button>
                <button @onclick="CancelRoleChange"
                        class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-400">
                    Нет
                </button>
            </div>
        </div>
    </div>
}

<!-- Модальное окно предупреждения -->
@if (IsWarningDialogOpen)
{
    <div class="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 z-50">
        <div class="bg-white rounded-lg shadow-lg p-6 w-1/3">
            <h3 class="text-lg font-semibold">Предупреждение</h3>
            <p class="mt-4 text-sm text-gray-600">Администратору запрещено изменять роль пользователя.</p>
            <div class="flex justify-end gap-4 mt-6">
                <button @onclick="CloseWarningDialog"
                        class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-400">
                    Закрыть
                </button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public User User { get; set; }

    [Inject]
    private MIContext DbContext { get; set; }

    private bool IsRoleChangeDialogOpen { get; set; } = false;
    private bool IsWarningDialogOpen { get; set; } = false;

    private void ShowRoleChangeConfirmation()
    {
        // Проверяем, является ли текущий пользователь администратором
        if (User.Role == "Administrator")
        {
            IsWarningDialogOpen = true;
            return;
        }

        IsRoleChangeDialogOpen = true;
    }

    private async Task ConfirmRoleChange()
    {
        IsRoleChangeDialogOpen = false;

        var userToUpdate = await DbContext.Users.FindAsync(User.ID_User);
        if (userToUpdate != null)
        {
            userToUpdate.Role = userToUpdate.Role == "User" ? "Teacher" : "User";
            await DbContext.SaveChangesAsync();
            User.Role = userToUpdate.Role;
            StateHasChanged();
        }
    }

    private void CancelRoleChange()
    {
        IsRoleChangeDialogOpen = false;
    }

    private void CloseWarningDialog()
    {
        IsWarningDialogOpen = false;
    }
}